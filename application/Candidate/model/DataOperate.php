<?php
namespace app\Candidate\model;
use think\Db;
use think\Model;

class DataOperate extends Model
{
    protected $table='candidate';
    public function save($data = [], $where = [], $sequence = null)
    {
        return parent::save($data, $where, $sequence); // TODO: Change the autogenerated stub
    }

    public function saveData($table,$data){
        $db=Db::table($table)->insert($data);
        return $db;
    }
    public function findData($table,$name,$email){
        $db=Db::table($table)->where('candidate_name',$name)->where('email',$email)->find();
        return $db;
    }
    public function isExist($table,$id){
        $db=Db::table($table)->where('candidate_id',$id)->delete();
        return $db;
    }
    public function updateCanData($table,$id,$data){
        $db=Db::table($table)->where('candidate_id',$id)->update($data);
        return $db;
    }
    public function findDataById($table,$id){
        $db=Db::table($table)->where('candidate_id',$id)->find();
        return $db;
    }
    public function saveCanId($userId,$canId){
        $db=Db::table('jszp_user')->where('user_id',$userId)->update(['candidate_id'=>$canId]);
        return $db;
    }
    public function getCanId($user_id){
        $db=Db::table('jszp_user')->where('user_id',$user_id)->find();
        return $db['candidate_id'];
    }
    public function fetchIndex($canId){
        return Db::table('jszp_candidate')->where('candidate_id',$canId)->paginate(1);
    }
    public function findDataJoin($uesr_id){
        return Db::table('jszp_user')
            ->alias('u')
            ->join('jszp_candidate c','u.candidate_id=c.candidate_id')
            ->where('user_id',$uesr_id)
            ->find();
    }
}